
    
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NetworkNew"
    xmlns:usercontrols="clr-namespace:NetworkNew.UserControls"
    xmlns:viewmodel="clr-namespace:NetworkNew.ViewModels">

    <ResourceDictionary x:Key="Dict">
        <Style x:Key="DefaultStyleNew" TargetType="ContentPresenter">
            <Setter Property="Canvas.Left" Value="{Binding model.X}"/>
            <Setter Property="Canvas.Top" Value="{Binding model.Y}"/>
            <Style.Triggers>
                <DataTrigger x:Name="BeginTrigger"
                                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                                                Value="{x:Static viewmodel:StateAction.ReStart}">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="StoryboardTest">
                            <Storyboard>
                                <DoubleAnimationUsingPath Name="DA" Storyboard.TargetProperty="(Canvas.Top)" 
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="Y" >
                                </DoubleAnimationUsingPath>
                                <DoubleAnimationUsingPath Storyboard.TargetProperty="(Canvas.Left)"
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="X" >
                                </DoubleAnimationUsingPath>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Pause}">
                    <DataTrigger.EnterActions>
                        <PauseStoryboard BeginStoryboardName="StoryboardTest"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Play}">
                    <DataTrigger.EnterActions>
                        <ResumeStoryboard BeginStoryboardName="StoryboardTest"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ResourceDictionary>
 

    <PathGeometry x:Key="geometryPath">
        <!--<PathFigure IsClosed="False" StartPoint="{Binding StartPoint}">-->
        <PathFigure IsClosed="False" StartPoint="10,10">
            <PolyLineSegment Points="220,10 220,175 10,175" />
        </PathFigure>
    </PathGeometry>

    <Style x:Key="DefaultStyle" TargetType="ContentPresenter">        
        <Setter Property="Canvas.Left" Value="{Binding model.X}"/>
        <Setter Property="Canvas.Top" Value="{Binding model.Y}"/>
        <Style.Triggers>
            <DataTrigger x:Name="BeginTrigger"
                                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                                                Value="{x:Static viewmodel:StateAction.ReStart}">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="StoryboardTest">
                        <Storyboard>
                            <DoubleAnimationUsingPath Name="DA" Storyboard.TargetProperty="(Canvas.Top)" 
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="Y" >
                            </DoubleAnimationUsingPath>
                            <DoubleAnimationUsingPath Storyboard.TargetProperty="(Canvas.Left)"
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="X" >
                            </DoubleAnimationUsingPath>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Pause}">
                <DataTrigger.EnterActions>
                    <PauseStoryboard BeginStoryboardName="StoryboardTest"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Play}">
                <DataTrigger.EnterActions>
                    <ResumeStoryboard BeginStoryboardName="StoryboardTest"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultStyleEllipse">
        <Setter Property="Canvas.Left" Value="{Binding model.X}"/>
        <Setter Property="Canvas.Top" Value="{Binding model.Y}"/>
        <Style.Triggers>
            <DataTrigger x:Name="BeginTrigger"
                                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                                                Value="{x:Static viewmodel:StateAction.ReStart}">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="StoryboardTest">
                        <Storyboard>
                            <DoubleAnimationUsingPath Name="DA" Storyboard.TargetProperty="(Canvas.Top)" 
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="Y" >
                            </DoubleAnimationUsingPath>
                            <DoubleAnimationUsingPath Storyboard.TargetProperty="(Canvas.Left)"
                                                               Duration="0:0:5" RepeatBehavior="Forever"
                                                               PathGeometry="{StaticResource geometryPath}" Source="X" >
                            </DoubleAnimationUsingPath>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Pause}">
                <DataTrigger.EnterActions>
                    <PauseStoryboard BeginStoryboardName="StoryboardTest"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.StateAction}" 
                Value="{x:Static viewmodel:StateAction.Play}">
                <DataTrigger.EnterActions>
                    <ResumeStoryboard BeginStoryboardName="StoryboardTest"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type usercontrols:MoveParticle}" BasedOn="{StaticResource {x:Type ItemsControl}}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type usercontrols:MoveParticle}">                    
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel>
                            <ItemsControl 
                                ItemsSource="{TemplateBinding ItemsSource}"
                                ItemContainerStyle="{StaticResource DefaultStyle}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>                                
                                <!--
                                <ItemsControl.ItemContainerStyleSelector>
                                    <usercontrols:MoveParticleStyleSelector CurrentStyle="{StaticResource DefaultStyle}"/>
                                </ItemsControl.ItemContainerStyleSelector>
                                -->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Ellipse Name="ellipse" Fill="Red" Height="50" Width="50"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
